{"version":3,"sources":["components/DisplayInput.js","components/GeneralInfoForm.js","components/DisplayRadio.js","components/DisplayCheckbox.js","components/DisplaySelect.js","components/EducationInfoForm.js","components/DisplayTextarea.js","components/ExperienceInfoForm.js","App.js","index.js"],"names":["DisplayInput","props","htmlFor","this","name","label","onChange","e","handleInput","index","value","type","placeholder","id","Component","GeneralInfoForm","preventDefault","input","currentTarget","console","log","copyOfState","state","general","setState","resetForm","reset","email","phone","portfolio","linkedIn","github","uniqid","Object","assign","edit","displayInput","Fragment","nextView","className","action","onSubmit","handleSubmit","onClick","DisplayRadio","values","graduate","comp","map","val","checked","DisplayCheckbox","DisplaySelect","options","disabled","level","EducationInfoForm","entry","education","delete","splice","addNewEntry","push","school","major","startDate","endDate","attending","degree","degreeLevel","view","prevView","DisplayTextarea","cols","rows","ExperienceInfoForm","experience","title","company","employed","duties","App","generateCV","addGeneralInfo","generalInfo","addEducation","addExperience","addSkills","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.406d5a20.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class DisplayInput extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    //console.log(props);\r\n  }\r\n\r\n    render() {\r\n     \r\n      // console.log(this.props);\r\n      // console.log(this.props.index);\r\n        return (\r\n          <div>\r\n            <label htmlFor={this.props.name}>{this.props.label}</label>\r\n            <br />\r\n            <input\r\n              onChange={(e)=>this.props.handleInput(e, this.props.index)}\r\n              name={this.props.name}\r\n              value={this.props.value}\r\n              type={this.props.type}\r\n              placeholder={this.props.placeholder}\r\n              id={this.props.id}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FiArrowRight } from \"react-icons/fi\";\r\nimport uniqid from \"uniqid\";\r\nimport DisplayInput from \"./DisplayInput\";\r\n\r\nclass GeneralInfoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    //equal to this props.general\r\n    this.state = {\r\n\t\tgeneral: this.props.general,\r\n\t\tid: uniqid()\r\n    };\r\n  }\r\n\r\n\thandleInput = (e) => {\r\n\t\te.preventDefault();\r\n\t  const { currentTarget: input } = e;\r\n\t  console.log(input.value);\r\n    const copyOfState = { ...this.state };\r\n    const { general } = copyOfState;\r\n    general[input.name] = input.value;\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     //form validation\r\n//     //if no errors pass state object to app\r\n//     //pass state to populateGeneral method\r\n//     this.props.populateGeneral(this.state);\r\n//     //reset form\r\n//     this.resetForm();\r\n//   };\r\n\r\n  resetForm = () => {\r\n    const reset = {\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      portfolio: \"\",\r\n      linkedIn: \"\",\r\n      github: \"\",\r\n      id: uniqid(),\r\n    };\r\n    this.setState(Object.assign(reset, this.state));\r\n  };\r\n\r\n  edit = () => {\r\n    //update form input values with state values\r\n    this.setState(Object.assign(this.props.general, this.state));\r\n  };\r\n\r\n  //label, name, value\r\n  displayInput = (label, name, value, type) => {\r\n    return (\r\n\t\t<React.Fragment key={uniqid()}>\r\n        <label htmlFor=\"name\">{label}</label>\r\n        <br />\r\n        <input\r\n          onChange={this.handleInput}\r\n          name={name}\r\n          value={value}\r\n          type={type}\r\n          placeholder={name}\r\n        />\r\n        <br />\r\n        <br />\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, portfolio, github, linkedIn } =\r\n\t\t  this.props.general;\r\n\t  const { nextView } = this.props;\r\n\t  const { general } = this.state;\r\n\r\n    return (\r\n\t\t<div className=\"general__info\">\r\n\t\t\t<h2>General Info</h2>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          <DisplayInput\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            type=\"text\"\r\n            handleInput={this.handleInput}\r\n\t\t\t\t\tplaceholder={name}\r\n\t\t\t\t\tkey={uniqid}\r\n          />\r\n          <DisplayInput\r\n            label=\"Email\"\r\n            name=\"email\"\r\n            value={email}\r\n            type=\"email\"\r\n            handleInput={this.handleInput}\r\n            placeholder={email}\r\n          />\r\n          <DisplayInput\r\n            label=\"Phone\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            type=\"phone\"\r\n            handleInput={this.handleInput}\r\n            placeholder={phone}\r\n          />\r\n          <DisplayInput\r\n            label=\"Portfolio\"\r\n            name=\"portfolio\"\r\n            value={portfolio}\r\n            type=\"text\"\r\n            handleInput={this.handleInput}\r\n            placeholder={portfolio}\r\n          />\r\n          <DisplayInput\r\n            label=\"LinkedIn\"\r\n            name=\"linkedIn\"\r\n            value={linkedIn}\r\n            type=\"text\"\r\n            handleInput={this.handleInput}\r\n            placeholder={linkedIn}\r\n          />\r\n          <DisplayInput\r\n            label=\"Github\"\r\n            name=\"github\"\r\n            value={github}\r\n            type=\"text\"\r\n            handleInput={this.handleInput}\r\n            placeholder={github}\r\n          />\r\n\t\t<br />\r\n          <button onClick={nextView}>\r\n            Next <FiArrowRight />\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GeneralInfoForm;","import React, { Component } from 'react'\r\n\r\nexport default class DisplayRadio extends Component {\r\n      \r\n     state = {\r\n        values: [\"yes\", \"no\"],\r\n        graduate: this.props.graduate,\r\n      };\r\n \r\n  \r\n  render() {\r\n    const { name, handleInput, comp, index, graduate, id } = this.props;\r\n   \r\n    return (\r\n      <React.Fragment>\r\n        {this.state.values.map((val) => {\r\n          console.log(name, val);\r\n          return (\r\n            <React.Fragment >\r\n              <input\r\n                type=\"radio\"\r\n                name={name}\r\n                value={val}\r\n                checked={graduate === val}\r\n                onChange={(e) => handleInput(e, index)}\r\n              />\r\n              <label htmlFor={name}>{val}</label>\r\n            </React.Fragment>\r\n          );\r\n        })}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//","import React, { Component } from 'react'\r\n\r\nexport default class DisplayCheckbox extends Component {\r\n    render() {\r\n        const {name, value,label, handleInput, index } = this.props;\r\n        return (\r\n          <React.Fragment>\r\n            <input\r\n              // className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              name={name}\r\n              value={value}\r\n              checked={value}\r\n              onChange={(e)=>handleInput(e, index)}\r\n            />\r\n            <label>{label}</label>\r\n          </React.Fragment>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport uniqid from \"uniqid\";\r\n\r\nexport default class DisplaySelect extends Component {\r\n    state = {\r\n        options: [\"Bachelors\", \"Masters\", \"Certificate\", \"Doctorate\"],\r\n    }\r\n    render() {\r\n        const { label, value, name, handleInput, index } = this.props;\r\n        const { options } = this.state;\r\n        return (\r\n          <div>\r\n            <label>{label}</label>\r\n            <select name={name} value={value} onChange={(e)=>handleInput(e, index)}>\r\n              <option disabled value=\"\">\r\n                {\"Select Level\"}\r\n              </option>\r\n              {options.map((level) => {\r\n                return <option key={uniqid()}>{level}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\nimport { FiPlus } from \"react-icons/fi\";\r\nimport DisplayInput from \"./DisplayInput\";\r\nimport DisplayRadio from \"./DisplayRadio\";\r\nimport DisplayCheckbox from \"./DisplayCheckbox\";\r\nimport DisplaySelect from \"./DisplaySelect\";\r\nimport uniqid from \"uniqid\";\r\nimport { FiArrowRight, FiArrowLeft } from \"react-icons/fi\";\r\n\r\nexport default class EducationInfoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n     \r\n    this.state = {\r\n      education: this.props.education,\r\n      degreeLevel: [\"Bachelors\", \"Masters\", \"Certificate\", \"Doctorate\"],\r\n        view: this.props.view,\r\n        //graduate: \"\"\r\n    };\r\n  }\r\n\r\n  handleInput = (e, index) => {\r\n    const { currentTarget: input } = e;\r\n    const copyOfState = { ...this.state };\r\n    const { education } = copyOfState;\r\n\r\n    let entry = education[index];\r\n    //if input type is a checkbox\r\n    input.type === \"checkbox\"\r\n      ? (entry[input.name] = input.checked)\r\n          : (entry[input.name] = input.value);\r\n      //if input type is radio\r\n      if (input.type === \"radio\") {\r\n          entry.graduate = input.value;\r\n      }\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.populateEducation(this.state.entry);\r\n//     this.resetForm();\r\n//   };\r\n\r\n//   resetForm = () => {\r\n//     const reset = {\r\n//       school: \"\",\r\n//       major: \"\",\r\n//       startDate: \"\",\r\n//       endDate: \"\",\r\n//       attending: false,\r\n//       degree: \"\",\r\n//       id: uniqid(),\r\n//     };\r\n//     this.setState(Object.assign(reset, this.state.education[0]));\r\n//   };\r\n\r\n//   save = () => {\r\n//     console.log(this.state.entry);\r\n//     this.setState({\r\n//       education: [this.state.entry, ...this.state.education],\r\n//     });\r\n//     this.resetForm();\r\n//     console.log(this.state.education);\r\n//     //add new array to the end of the array, reset first element of array\r\n//   };\r\n\r\n//   edit = (id) => {\r\n//     //get the education array, go find the\r\n//     const educationCopy = [...this.props.education];\r\n//     educationCopy.find((entry) => {\r\n//       return entry.id === this.state.education[0].id;\r\n//     });\r\n//     this.setState(Object.assign(this.props));\r\n//   };\r\n\r\n  delete = (index) => {\r\n    const copyOfState = { ...this.state };\r\n    const { education } = copyOfState;\r\n    education.splice(index, 1);\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n  addNewEntry = () => {\r\n    const copyOfState = { ...this.state };\r\n    const { education } = copyOfState;\r\n    education.push({\r\n      school: \"\",\r\n      major: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      attending: \"\",\r\n        graduate: \"\",\r\n      degree: \"\",\r\n      id: uniqid(),\r\n    });\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n  render() {\r\n    const { nextView, prevView, education } = this.props;\r\n    \r\n    return (\r\n      <div className=\"education__info\">\r\n        <h2>Education Info</h2>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          {education.map((entry, index) => {\r\n            const {\r\n              school,\r\n              major,\r\n              startDate,\r\n              endDate,\r\n              attending,\r\n              graduate,\r\n              degree,\r\n              id,\r\n            } = entry;\r\n\r\n            return (\r\n              <React.Fragment key={id}>\r\n                <DisplayInput\r\n                  label=\"School\"\r\n                  name=\"school\"\r\n                  value={school}\r\n                  type=\"text\"\r\n                  handleInput={this.handleInput}\r\n                  placeholder={school}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <DisplayInput\r\n                  label=\"Major\"\r\n                  name=\"major\"\r\n                  value={major}\r\n                  type=\"text\"\r\n                  handleInput={this.handleInput}\r\n                  placeholder={major}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n\r\n                <DisplayCheckbox\r\n                  label=\"Still attending\"\r\n                  name=\"attending\"\r\n                  value={attending}\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <DisplayInput\r\n                  label=\"Date Started\"\r\n                  name=\"startDate\"\r\n                  value={startDate}\r\n                  type=\"date\"\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <br />\r\n                <DisplayInput\r\n                  label=\"Date Ended\"\r\n                  name=\"endDate\"\r\n                  value={endDate}\r\n                  type=\"date\"\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <br />\r\n                <span>Did you graduate?</span>\r\n                <DisplayRadio\r\n                  label=\"Yes\"\r\n                  name={`graduate${index}`}\r\n                  graduate={graduate}\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <DisplaySelect\r\n                  label={\"Degree\"}\r\n                  value={degree}\r\n                  name={\"degree\"}\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n\r\n                <br />\r\n                <div key={id}>\r\n                  <button type=\"button\" onClick={() => this.delete(index)}>\r\n                    Delete Entry <FiTrash2 />\r\n                  </button>\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </form>\r\n        <button type=\"button\" onClick={() => this.addNewEntry()}>\r\n          Add Entry <FiPlus />\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <button onClick={prevView}>\r\n          Prev <FiArrowLeft />\r\n        </button>\r\n        <button onClick={nextView}>\r\n          Next <FiArrowRight />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayTextarea extends Component {\r\n    render() {\r\n        const { type , label, name, cols, rows, index, handleInput} = this.props;\r\n        return (\r\n          <div>\r\n            <label htmlFor={name}>{label}</label>\r\n            <br />\r\n            <textarea type={type} name={name} cols={cols} rows={rows} handleInput={(e)=>this.handleInput(e, index)} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { FiEdit3 } from \"react-icons/fi\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\nimport { FiArrowRight, FiArrowLeft, FiPlus } from \"react-icons/fi\";\r\nimport DisplayInput from \"./DisplayInput\";\r\nimport DisplayRadio from \"./DisplayRadio\";\r\nimport DisplayCheckbox from \"./DisplayCheckbox\";\r\nimport DisplaySelect from \"./DisplaySelect\";\r\nimport DisplayTextarea from './DisplayTextarea';\r\nimport uniqid from \"uniqid\";\r\n\r\nexport default class ExperienceInfoForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        experience: this.props.experience,\r\n    };\r\n  }\r\n\r\n  handleInput = (e, index) => {\r\n    const { currentTarget: input } = e;\r\n    const copyOfState = { ...this.state };\r\n    const { experience } = copyOfState;\r\n\r\n    let entry = experience[index];\r\n    //if input type is a checkbox\r\n    input.type === \"checkbox\"\r\n      ? (entry[input.name] = input.checked)\r\n          : (entry[input.name] = input.value);\r\n \r\n    // //if input type is radio\r\n    // if (input.type === \"radio\") {\r\n    //   entry.graduate = input.value;\r\n    // }\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n  delete = (index) => {\r\n    const copyOfState = { ...this.state };\r\n    const { experience } = copyOfState;\r\n    experience.splice(index, 1);\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n  addNewEntry = () => {\r\n    const copyOfState = { ...this.state };\r\n    const { experience } = copyOfState;\r\n    experience.push({\r\n      title: \"\",\r\n      company: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      employed: \"\",\r\n      duties: \"\",\r\n      id: uniqid(),\r\n    });\r\n    this.setState(copyOfState);\r\n  };\r\n\r\n  render() {\r\n    const { prevView, nextView, experience } = this.props;\r\n    // const { title, company, startDate, endDate, employed, duties, id } = experience;\r\n    return (\r\n      <div className=\"experience__info\">\r\n        <h2>General Info</h2>\r\n        <form action=\"\">\r\n          {experience.map((entry, index) => {\r\n            const { title, company, startDate, endDate, employed, duties, id } =\r\n              entry;\r\n            return (\r\n              <React.Fragment key={id}>\r\n                <DisplayInput\r\n                  label=\"Job Title\"\r\n                  name=\"title\"\r\n                  value={title}\r\n                  type=\"text\"\r\n                  handleInput={this.handleInput}\r\n                  placeholder={title}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <DisplayInput\r\n                  label=\"Company\"\r\n                  name=\"company\"\r\n                  value={company}\r\n                  type=\"text\"\r\n                  handleInput={this.handleInput}\r\n                  placeholder={company}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <DisplayInput\r\n                  label=\"Date Started\"\r\n                  name=\"startDate\"\r\n                  value={startDate}\r\n                  type=\"date\"\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <br />\r\n                {employed ? (\r\n                  <DisplayInput\r\n                    label=\"Date Ended\"\r\n                    name=\"endDate\"\r\n                    value={endDate}\r\n                    type=\"date\"\r\n                    handleInput={this.handleInput}\r\n                    index={index}\r\n                    id={id}\r\n                    disabled={true}\r\n                  />\r\n                ) : (\r\n                  <DisplayInput\r\n                    label=\"Date Ended\"\r\n                    name=\"endDate\"\r\n                    value={endDate}\r\n                    type=\"date\"\r\n                    handleInput={this.handleInput}\r\n                    index={index}\r\n                    id={id}\r\n                  />\r\n                )}\r\n\r\n                <DisplayCheckbox\r\n                  label=\"Still Employed?\"\r\n                  name=\"employed\"\r\n                  value={employed}\r\n                  handleInput={this.handleInput}\r\n                  index={index}\r\n                  id={id}\r\n                />\r\n                <DisplayTextarea\r\n                  type={\"textarea\"}\r\n                  label={\"Duties\"}\r\n                  name={duties}\r\n                  cols={30}\r\n                  rows={10}\r\n                  index={index}\r\n                  handleInput={this.handleInput}\r\n                />\r\n                <br />\r\n                <div key={id}>\r\n                  <button type=\"button\" onClick={() => this.delete(index)}>\r\n                    Delete Entry <FiTrash2 />\r\n                  </button>\r\n                  <br />\r\n                  <br />\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </form>\r\n        <br />\r\n        <button type=\"button\" onClick={() => this.addNewEntry()}>\r\n          Add Entry <FiPlus />\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <button onClick={prevView}>\r\n          Prev <FiArrowLeft />\r\n        </button>\r\n        <button onClick={nextView}>\r\n          Next <FiArrowRight />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport uniqid from \"uniqid\";\n// import ResumeForm from \"./components/ResumeForm\";\nimport GeneralInfoForm from \"./components/GeneralInfoForm\";\nimport EducationInfoForm from \"./components/EducationInfoForm\";\nimport ExperienceInfoForm from \"./components/ExperienceInfoForm\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      general: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        portfolio: \"\",\n        linkedIn: \"\",\n        github: \"\",\n      },\n      education: [\n        {\n          school: \"\",\n          major: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          attending: \"\",\n          graduate: \"\",\n          degree: \"\",\n          id: uniqid(),\n        },\n      ],\n      experience: [\n        {\n          title: \"\",\n          company: \"\",\n          startDate: \"\",\n          endDate: \"\",\n          employed: \"\",\n          duties: \"\",\n          id: uniqid(),\n        },\n      ],\n      //   educationList: [],\n      //   experiencesList: [],\n      //   skillsList: [],\n      view: 2,\n    };\n  }\n\n  generateCV = () => {};\n\n  addGeneralInfo = (generalInfo) => {\n    const copyOfState = this.state;\n    const { general } = copyOfState;\n    Object.assign(general, generalInfo);\n    this.setState(copyOfState);\n  };\n\n  addEducation = () => {};\n  addExperience = () => {};\n  addSkills = () => {};\n\n  nextView = (e) => {\n    e.preventDefault();\n    const copyOfState = { ...this.state };\n    copyOfState.view++;\n    this.setState(copyOfState);\n  };\n\n  prevView = (e) => {\n    e.preventDefault();\n    console.log(\"prev\");\n    const copyOfState = { ...this.state };\n    copyOfState.view--;\n    this.setState(copyOfState);\n  };\n\n  //reset = () => {};\n\n  render() {\n    const { view, id } = this.state;\n    return (\n      <section className=\"App\">\n        <article className=\"cv\">\n          <h1>CV Application</h1>\n          {view === 0 ? (\n            <GeneralInfoForm\n              general={this.state.general}\n              nextView={this.nextView}\n              addNewEntry={this.addNewEntry}\n            />\n          ) : view === 1 ? (\n            <div>\n              <EducationInfoForm\n                education={this.state.education}\n                nextView={this.nextView}\n                prevView={this.prevView}\n              />\n            </div>\n          ) : view === 2 ? (\n            <div>\n              <ExperienceInfoForm\n                nextView={this.nextView}\n                prevView={this.prevView}\n                experience={this.state.experience}\n              />\n            </div>\n          ) : (\n            \"\"\n          )}\n        </article>\n      </section>\n    );\n  }\n}\n\nexport default App;\n\n{\n  /* <article className=\"preview\">\n\t\t\t\t\t<h1>CV Preview</h1>\n\t\t\t\t\t<button type=\"button\" onClick={this.previewCV}>Preview Resume</button>\n\t\t\t\t\t<GeneralPreview general={this.state.general} />\n\t\t\t\t\t<EducationPreview educationList={this.state.educationList} />\n\t\t\t\t</article> */\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}